/*
 * This file is generated by jOOQ.
 */
package com.klichota.jooqdemo.boundary.perstitence;


import com.klichota.jooqdemo.boundary.perstitence.tables.Databasechangeloglock;
import com.klichota.jooqdemo.boundary.perstitence.tables.Loan;
import com.klichota.jooqdemo.boundary.perstitence.tables.LoanExtension;
import com.klichota.jooqdemo.boundary.perstitence.tables.Parameter;
import com.klichota.jooqdemo.boundary.perstitence.tables.Proposal;

import javax.annotation.Generated;

import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.Internal;


/**
 * A class modelling indexes of tables of the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index DATABASECHANGELOGLOCK_PKEY = Indexes0.DATABASECHANGELOGLOCK_PKEY;
    public static final Index PK_LOAN = Indexes0.PK_LOAN;
    public static final Index PK_LOAN_EXTENSION = Indexes0.PK_LOAN_EXTENSION;
    public static final Index PK_PARAMETER = Indexes0.PK_PARAMETER;
    public static final Index PK_PROPOSAL = Indexes0.PK_PROPOSAL;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0 {
        public static Index DATABASECHANGELOGLOCK_PKEY = Internal.createIndex("databasechangeloglock_pkey", Databasechangeloglock.DATABASECHANGELOGLOCK, new OrderField[] { Databasechangeloglock.DATABASECHANGELOGLOCK.ID }, true);
        public static Index PK_LOAN = Internal.createIndex("pk_loan", Loan.LOAN, new OrderField[] { Loan.LOAN.ID }, true);
        public static Index PK_LOAN_EXTENSION = Internal.createIndex("pk_loan_extension", LoanExtension.LOAN_EXTENSION, new OrderField[] { LoanExtension.LOAN_EXTENSION.ID }, true);
        public static Index PK_PARAMETER = Internal.createIndex("pk_parameter", Parameter.PARAMETER, new OrderField[] { Parameter.PARAMETER.ID }, true);
        public static Index PK_PROPOSAL = Internal.createIndex("pk_proposal", Proposal.PROPOSAL, new OrderField[] { Proposal.PROPOSAL.ID }, true);
    }
}
