/*
 * This file is generated by jOOQ.
 */
package com.klichota.jooqdemo.boundary.perstitence;


import com.klichota.jooqdemo.boundary.perstitence.tables.Databasechangeloglock;
import com.klichota.jooqdemo.boundary.perstitence.tables.Loan;
import com.klichota.jooqdemo.boundary.perstitence.tables.LoanExtension;
import com.klichota.jooqdemo.boundary.perstitence.tables.Parameter;
import com.klichota.jooqdemo.boundary.perstitence.tables.Proposal;
import com.klichota.jooqdemo.boundary.perstitence.tables.records.DatabasechangeloglockRecord;
import com.klichota.jooqdemo.boundary.perstitence.tables.records.LoanExtensionRecord;
import com.klichota.jooqdemo.boundary.perstitence.tables.records.LoanRecord;
import com.klichota.jooqdemo.boundary.perstitence.tables.records.ParameterRecord;
import com.klichota.jooqdemo.boundary.perstitence.tables.records.ProposalRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DatabasechangeloglockRecord> DATABASECHANGELOGLOCK_PKEY = UniqueKeys0.DATABASECHANGELOGLOCK_PKEY;
    public static final UniqueKey<LoanRecord> PK_LOAN = UniqueKeys0.PK_LOAN;
    public static final UniqueKey<LoanExtensionRecord> PK_LOAN_EXTENSION = UniqueKeys0.PK_LOAN_EXTENSION;
    public static final UniqueKey<ParameterRecord> PK_PARAMETER = UniqueKeys0.PK_PARAMETER;
    public static final UniqueKey<ProposalRecord> PK_PROPOSAL = UniqueKeys0.PK_PROPOSAL;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<LoanRecord, ProposalRecord> LOAN__FK_LOAN_PROPOSAL = ForeignKeys0.LOAN__FK_LOAN_PROPOSAL;
    public static final ForeignKey<LoanExtensionRecord, LoanRecord> LOAN_EXTENSION__FK_LOAN_EXTENSION_LOAN = ForeignKeys0.LOAN_EXTENSION__FK_LOAN_EXTENSION_LOAN;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<DatabasechangeloglockRecord> DATABASECHANGELOGLOCK_PKEY = Internal.createUniqueKey(Databasechangeloglock.DATABASECHANGELOGLOCK, "databasechangeloglock_pkey", Databasechangeloglock.DATABASECHANGELOGLOCK.ID);
        public static final UniqueKey<LoanRecord> PK_LOAN = Internal.createUniqueKey(Loan.LOAN, "pk_loan", Loan.LOAN.ID);
        public static final UniqueKey<LoanExtensionRecord> PK_LOAN_EXTENSION = Internal.createUniqueKey(LoanExtension.LOAN_EXTENSION, "pk_loan_extension", LoanExtension.LOAN_EXTENSION.ID);
        public static final UniqueKey<ParameterRecord> PK_PARAMETER = Internal.createUniqueKey(Parameter.PARAMETER, "pk_parameter", Parameter.PARAMETER.ID);
        public static final UniqueKey<ProposalRecord> PK_PROPOSAL = Internal.createUniqueKey(Proposal.PROPOSAL, "pk_proposal", Proposal.PROPOSAL.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<LoanRecord, ProposalRecord> LOAN__FK_LOAN_PROPOSAL = Internal.createForeignKey(com.klichota.jooqdemo.boundary.perstitence.Keys.PK_PROPOSAL, Loan.LOAN, "loan__fk_loan_proposal", Loan.LOAN.PROPOSAL_ID);
        public static final ForeignKey<LoanExtensionRecord, LoanRecord> LOAN_EXTENSION__FK_LOAN_EXTENSION_LOAN = Internal.createForeignKey(com.klichota.jooqdemo.boundary.perstitence.Keys.PK_LOAN, LoanExtension.LOAN_EXTENSION, "loan_extension__fk_loan_extension_loan", LoanExtension.LOAN_EXTENSION.LOAN_ID);
    }
}
