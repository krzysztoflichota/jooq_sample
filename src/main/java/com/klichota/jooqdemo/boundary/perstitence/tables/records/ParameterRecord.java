/*
 * This file is generated by jOOQ.
 */
package com.klichota.jooqdemo.boundary.perstitence.tables.records;


import com.klichota.jooqdemo.boundary.perstitence.tables.Parameter;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ParameterRecord extends UpdatableRecordImpl<ParameterRecord> implements Record4<Long, String, Long, BigDecimal> {

    private static final long serialVersionUID = -521289213;

    /**
     * Setter for <code>public.parameter.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.parameter.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.parameter.code</code>.
     */
    public void setCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.parameter.code</code>.
     */
    public String getCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.parameter.int_value</code>.
     */
    public void setIntValue(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.parameter.int_value</code>.
     */
    public Long getIntValue() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.parameter.decimal_value</code>.
     */
    public void setDecimalValue(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.parameter.decimal_value</code>.
     */
    public BigDecimal getDecimalValue() {
        return (BigDecimal) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, String, Long, BigDecimal> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, String, Long, BigDecimal> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Parameter.PARAMETER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Parameter.PARAMETER.CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return Parameter.PARAMETER.INT_VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field4() {
        return Parameter.PARAMETER.DECIMAL_VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getIntValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component4() {
        return getDecimalValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getIntValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value4() {
        return getDecimalValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ParameterRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ParameterRecord value2(String value) {
        setCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ParameterRecord value3(Long value) {
        setIntValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ParameterRecord value4(BigDecimal value) {
        setDecimalValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ParameterRecord values(Long value1, String value2, Long value3, BigDecimal value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ParameterRecord
     */
    public ParameterRecord() {
        super(Parameter.PARAMETER);
    }

    /**
     * Create a detached, initialised ParameterRecord
     */
    public ParameterRecord(Long id, String code, Long intValue, BigDecimal decimalValue) {
        super(Parameter.PARAMETER);

        set(0, id);
        set(1, code);
        set(2, intValue);
        set(3, decimalValue);
    }
}
